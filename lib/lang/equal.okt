test "==" {
    assert(true == true)
    assert(false == false)

    assert('a' == 'a')
    assert('ğŸ˜ƒ' == 'ğŸ˜ƒ')

    assert(123 == 123)
    assert(123 == 123.00)
    assert(0 == 0)
    assert(0.00 == 0.000)
    assert(-4 == -4)
    assert(-4.0 == -4)

    assert("" == "")
    assert("foo" == "foo")
    assert("ğŸ˜ƒfoo" == "ğŸ˜ƒfoo")
    
    assert(`` == ``)
    assert(`foo` == `foo`)
    assert(`ğŸ˜ƒfoo` == `ğŸ˜ƒfoo`)

    assert([]bool [] == []bool [])
    assert([]bool [true] == []bool [true])
    assert([]bool [true, false] == []bool [true, false])

    assert([]char [] == []char [])
    assert([]char ['a'] == []char ['a'])
    assert([]char ['a', 'ğŸ˜ƒ'] == []char ['a', 'ğŸ˜ƒ'])

    assert([]data [] == []data [])
    assert([]data [`a`] == []data [`a`])
    assert([]data [`a`, `ğŸ˜ƒ`] == []data [`a`, `ğŸ˜ƒ`])

    assert([]number [] == []number [])
    assert([]number [1.23] == []number [1.23])
    assert([]number [1.23, 4.56] == []number [1.23, 4.56])

    assert([]string [] == []string [])
    assert([]string ["a"] == []string ["a"])
    assert([]string ["a", "ğŸ˜ƒfoo"] == []string ["a", "ğŸ˜ƒfoo"])
}
